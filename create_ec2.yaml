---
- hosts: localhost
  gather_facts: no
  vars:
    ami_id: "ami-04e59c05167ea7bd5"
  module_defaults:
    group/aws:
      region: "us-west-1"

  tasks:
    - name: Provision Db Instance
      ec2:
        key_name: zum
        assign_public_ip: yes
        group:
          - "{{postgres_tag_sg.group_name}}"
          - "{{nginx_sg.group_name}}"
          - "{{dev_sg.group_name}}"
        instance_type: t2.micro
        image: "{{ ami_id }}"
        instance_tags:
          Name: provision_postgres_instance
          Module: 5
        vpc_subnet_id: "{{ public_subnet_1.subnet.id }}"
        exact_count: 1
        state: present
        user_data: "{{ lookup('file', './ec2-scripts/ec2-prod-bootstrap.sh') | b64encode }}"
      register: db_sql_ec2

    - name: debug
      debug: var=db_sql_ec2

    - name: Connect to database, create  user, and grant access to database and products table
      postgresql_user:
        db: ans-rds-subnet
        login_host: ansibleimagedb2.cfxeylolmgaa.us-west-1.rds.amazonaws.com
        login_user: postgres
        login_password: "{{ lookup('aws_secret', 'sec-ans-ig') }}"
        no_password_changes: no
        priv: ALL
        user: image_gallery
        password: ceec4eif7ya
      register: db_user

    - name: debug
      debug: var=db_user

    - name:
      postgresql_table:
        name: users
        owner: image_gallery
        columns:
          - username varchar(100) primary key
          - password varchar(100)
          - full_name varchar(100)
      register: users_table

    - name: Insert query to image_gallery
      postgresql_query:
        db: image_gallery
        query: insert into users (username, password, full_name) values(%s, %s, %s);