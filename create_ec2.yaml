- hosts: localhost
  gather_facts: no
  vars:
    aws_region: "us-west-1"
    ami_id: "ami-04e59c05167ea7bd5"
  module_defaults:
    group/aws:
      region: "{{ aws_region }}"
  tasks:
    - name: Provision Db Instance
      ec2:
        key_name: zum
        assign_public_ip: yes
        user_data: "{{ lookup('file', './ec2-scripts/ec2-prod-bootstrap.sh') }}"
        group:
          - "{{postgres_tag_sg.group_name}}"
          - "{{nginx_sg.group_name}}"
          - "{{dev_sg.group_name}}"
        instance_type: t2.micro
        region: "{{ aws_region }}"
        image: "{{ ami_id }}"
        instance_profile_name: image-gallery-server-role
        instance_tags:
          Name: provision_postgres_instance
        vpc_subnet_id: "{{ public_subnet_1.subnet.id }}"
        exact_count: 1
        count_tag:
          Name: ans_Db_sql
      register: db_sql

    - name: debug
      debug: var=db_sql
#
#    - name: display multiple file contents
#      slurp:
#        src: ./rds-ep.txt
#      register: ep
#
#    - name: display multiple file contents
#      slurp:
#        src: ./rds-ep.txt
#      register: rds_name


    - name: Connect to database,
      become: yes
      become_user: root
      postgresql_user:
        db: "{{ans_rds.instance.db_name}}"
        login_host: "{{ans_rds.instance.endpoint}}"
        login_user: postgres
        login_password: postgres
        port: 5432
        no_password_changes: no
        priv: ALL
        user: image_gallery
        password: ceec4eif7ya
      register: db_user

    - name: debug
      debug: var=db_user

    - name:
      postgresql_table:
        name: users
        owner: image_gallery
        columns:
          - username varchar(100) primary key
          - password varchar(100)
          - full_name varchar(100)
      register: users_table

    - name: Insert query to image_gallery
      postgresql_query:
        db: image_gallery
        query: insert into users (username, password, full_name) values(%s, %s, %s);




        #    - name: Connect to database, create  user, and grant access to database and products table
        #      become: yes
        #      become_user: postgres
        #      postgresql_user:
        #        name: "image_gallery"
        #        password: "tacos"
        #
        #    - name: Access for user
        #      become: yes
        #      become_user: postgres
        #      postgresql_privs:
        #        db: ansibleimagedb
        #        role: image_gallery
        #        privs: ALL